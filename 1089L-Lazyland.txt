import java.io.*;
import java.util.*;

public class 1089L {
    public  static  void  main(String[]args) throws IOException {
        Scanner sc = new Scanner(System.in);
        PrintWriter pw = new PrintWriter(System.out);
        int n =sc.nextInt();
        int k = sc.nextInt();
        int[]p = new int[n];
        int []job = new int[k+1];
        for (int i =0;i<n;i++){
            p[i]= sc.nextInt();
        }
        PriorityQueue<Integer>pq = new PriorityQueue<>();
        for (int i=0;i<n;i++){
            int b = sc.nextInt();
            if (job[p[i]]==0)job[p[i]]=b;
            else{
                if (job[p[i]]<b){
                    pq.add(job[p[i]]);
                    job[p[i]]=b;
                }
                else pq.add(b);
            }
        }
        int x =0;
        for (int i=1;i<k+1;i++){
            if (job[i]==0)x++;
        }
        long sum=0;
        while (x-->0){
            sum+=pq.poll();
        }
        pw.println(sum);
        pw.flush();
    }
    static class Scanner
    {
        StringTokenizer st;
        BufferedReader br;

        public Scanner(InputStream s){	br = new BufferedReader(new InputStreamReader(s));}

        public String next() throws IOException
        {
            while (st == null || !st.hasMoreTokens())
                st = new StringTokenizer(br.readLine());
            return st.nextToken();
        }

        public int nextInt() throws IOException {return Integer.parseInt(next());}

        public long nextLong() throws IOException {return Long.parseLong(next());}

        public String nextLine() throws IOException {return br.readLine();}

        public double nextDouble() throws IOException
        {
            String x = next();
            StringBuilder sb = new StringBuilder("0");
            double res = 0, f = 1;
            boolean dec = false, neg = false;
            int start = 0;
            if(x.charAt(0) == '-')
            {
                neg = true;
                start++;
            }
            for(int i = start; i < x.length(); i++)
                if(x.charAt(i) == '.')
                {
                    res = Long.parseLong(sb.toString());
                    sb = new StringBuilder("0");
                    dec = true;
                }
                else
                {
                    sb.append(x.charAt(i));
                    if(dec)
                        f *= 10;
                }
            res += Long.parseLong(sb.toString()) / f;
            return res * (neg?-1:1);
        }

        public boolean ready() throws IOException {return br.ready();}


    }
}